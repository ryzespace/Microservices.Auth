services:
  auth:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth
    restart: unless-stopped
    ports:
      - "5000:5000"  # REST HTTPS
      - "5001:5001"  # gRPC HTTPS
    depends_on:
      - auth-db
    volumes:
      - ./certs:/root/certs
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=auth-db;Port=5432;Database=Auth;Username=postgres;Password=postgres
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - db_net

  auth-db:
    image: postgres:15
    container_name: auth-db
    environment:
      POSTGRES_DB: Auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - Auth-data:/var/lib/postgresql/data
    networks:
      - db_net

  keycloak:
    build:
      context: Deploy/Keycloak
      dockerfile: Dockerfile
    container_name: keycloak
    command: >
      start
      --http-enabled=true
      --hostname-strict=false
    environment:
      KC_FEATURES: scripts
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://auth-db:5432/Auth
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KEYCLOAK_IMPORT: /tmp/keycloak/realm-authz.json
    volumes:
      - ./keycloak:/tmp/keycloak
    ports:
      - "8081:8080"
    depends_on:
      - auth-db
    networks:
      - db_net

volumes:
  Auth-data:

networks:
  db_net:
    driver: bridge
